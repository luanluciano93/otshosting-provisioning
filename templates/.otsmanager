#!/bin/bash
alias start='sudo systemctl start'
alias stop='sudo systemctl stop'
alias status='sudo systemctl --no-pager status'
alias restart='sudo systemctl restart'
alias enable='sudo systemctl enable'
alias disable='sudo systemctl disable'
alias log='journalctl -u'
alias follow='journalctl -f -u'
alias updatetfs='cd /home/otsmanager/forgottenserver && git pull && rm -rf build && mkdir -p build && cd build && cmake .. && make && cd'
alias duedate=`echo date -d $(curl -m 1 -s https://spigu.net/api/otshosting/expires)`
function GetLocalIP()
{
   ip -4 -o addr show eth0 | egrep -o '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}' | head -n 1
}
alias serverip=GetLocalIP
# https://transfer.sh/
# https://gist.github.com/nl5887/a511f172d3fb3cd0e42d
function transfer() { 
    # check arguments
    if [ $# -eq 0 ]; 
    then 
        echo "Nenhum argumento especificado. Uso:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"
        return 1
    fi

    # obter temporariamente o nome do arquivo, a saída é gravada neste arquivo, mostrando que o progresso pode ser mostrado
    tmpfile=$( mktemp -t transferXXX )
    
    # carregar stdin ou arquivo
    file=$1

    if tty -s; 
    then 
        basefile=$(basename "$file" | sed -e 's/[^a-zA-Z0-9._-]/-/g') 

        if [ ! -e $file ];
        then
            echo "O arquivo $file não existe."
            return 1
        fi
        
        if [ -d $file ];
        then
            # diretório zip e transfer
            zipfile=$( mktemp -t transferXXX.zip )
            cd $(dirname $file) && zip -r -q - $(basename $file) >> $zipfile
            curl --progress-bar --upload-file "$zipfile" "https://transfer.sh/$basefile.zip" >> $tmpfile
            rm -f $zipfile
        else
            # arquivo transfer
            curl --progress-bar --upload-file "$file" "https://transfer.sh/$basefile" >> $tmpfile
        fi
    else 
        # tubo de transfer
        curl --progress-bar --upload-file "-" "https://transfer.sh/$file" >> $tmpfile
    fi
   
    # link de saída do gato
    cat $tmpfile

    # limpar
    rm -f $tmpfile
}
alias transfer=transfer

expires=$(curl -m 1 -s https://spigu.net/api/otshosting/expires)

echo "===================   MySQL   ==================="
echo "    phpMyAdmin: https://$(GetLocalIP)/pma3380"
echo "    Username: `cat ~/.my.cnf | sed -n -e '2{p;q}' | awk -F'=' '{ print $2 }'`"
echo "    Password: `cat ~/.my.cnf | sed -n -e '3{p;q}' | awk -F'=' '{ print $2 }'`"
echo -e ' Você pode executar o comando \E[32;40mmysql'"\033[1m\033[0m sem uma senha."
echo "    Tamanho total e localização dos backups do MySQL: `du -hs /var/lib/automysqlbackup/`"
echo "    Coloque os arquivos do seu site em /home/otsmanager/www/public_html"
echo ""
echo "===================   TFS comandos   ===================" 
echo " Se você executar o TFS com os seguintes comandos, ele será reiniciado automaticamente."
echo -e '  Ativar inicialização automática na inicialização:  \E[32;40msudo systemctl enable tfs'"\033[1m\033[0m"
echo -e ' Desativar inicialização automática na inicialização:  \E[32;40msudo systemctl disable tfs'"\033[1m\033[0m"
echo -e '                  Iniciar TFS:  \E[32;40msudo systemctl start tfs'"\033[1m\033[0m"
echo -e '                   Parar TFS:  \E[32;40msudo systemctl stop tfs'"\033[1m\033[0m"
echo -e '                Reiniciar TFS:  \E[32;40msudo systemctl restart tfs'"\033[1m\033[0m"
echo -e '        Verifique o status do TFS:  \E[32;40msudo systemctl status tfs'"\033[1m\033[0m"
echo -e '          Mostrar log TFS completo:  \E[32;40mjournalctl -u tfs'"\033[1m\033[0m (q to exit)"
echo -e '         Siga o console do TFS:  \E[32;40mjournalctl -u tfs -f'"\033[1m\033[0m (CTRL+C to stop)"
echo ""
echo "===================  Comandos úteis   ==================="
echo -e 'Atualize o TFS para o repositório mais recente:  \E[32;40mupdatetfs'"\033[1m\033[0m"
echo -e '      Mostrar data de vencimento do serviço:  \E[32;40mduedate'"\033[1m\033[0m"
echo -e '             Mostrar IP do servidor:  \E[32;40mserverip'"\033[1m\033[0m"
echo -e '        Compartilhe um arquivo:  \E[32;40mtransfer path/to/file'"\033[1m\033[0m"

echo ""
if [ "not found" != "$expires" ]; then
    echo -e "\e[0;33mSeu serviço expira em $(date -d $expires)\033[1m\033[0m"
fi
echo -n "Status atual do TFS: "
status tfs
